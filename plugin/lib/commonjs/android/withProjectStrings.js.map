{"version":3,"names":["_configPlugins","require","_pluginUtils","withProjectStrings","config","withStringsXml","stringsXml","modResults","pluginVersion","getPluginVersion","addStringsToXml","name","value","exports","stringResources","resources","string","forEach","existingStringIndex","findIndex","item","_item$$","$","_","push"],"sources":["withProjectStrings.js"],"sourcesContent":["import { withStringsXml } from '@expo/config-plugins';\nimport { getPluginVersion } from '../helpers/utils/pluginUtils';\n/**\n * Adds or updates string resources in Android's strings.xml required by the plugin\n */\nexport const withProjectStrings = (config) => {\n    return withStringsXml(config, (config) => {\n        const stringsXml = config.modResults;\n        const pluginVersion = getPluginVersion();\n        // Updating meta-data in AndroidManifest.xml fails on Manifest merging, so we're updating\n        // the strings here instead\n        // These strings are added to the strings.xml file by Customer.io's React Native SDK\n        // We're updating them here to include the Expo client source and version so user agent\n        // can be generated correctly for Expo apps\n        addStringsToXml(stringsXml, [\n            { name: 'customer_io_react_native_sdk_client_source', value: 'Expo' },\n            { name: 'customer_io_react_native_sdk_client_version', value: pluginVersion },\n        ]);\n        return config;\n    });\n};\n/**\n * Adds or updates multiple string resources in Android's strings.xml\n * @param stringsXml - Parsed strings.xml object\n * @param stringResources - Array of string resources to add or update\n * @returns Updated strings.xml object\n */\nexport function addStringsToXml(stringsXml, stringResources) {\n    // Ensure the resource exists\n    if (!stringsXml.resources) {\n        stringsXml.resources = { string: [] };\n    }\n    stringResources.forEach(({ name, value }) => {\n        const existingStringIndex = stringsXml.resources.string.findIndex((item) => item.$?.name === name);\n        if (existingStringIndex !== -1) {\n            // Update the existing string\n            stringsXml.resources.string[existingStringIndex]._ = value;\n        }\n        else {\n            // Add a new string resource\n            stringsXml.resources.string.push({\n                $: { name },\n                _: value,\n            });\n        }\n    });\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,cAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA;AACA;AACA;AACO,MAAME,kBAAkB,GAAIC,MAAM,IAAK;EAC1C,OAAO,IAAAC,6BAAc,EAACD,MAAM,EAAGA,MAAM,IAAK;IACtC,MAAME,UAAU,GAAGF,MAAM,CAACG,UAAU;IACpC,MAAMC,aAAa,GAAG,IAAAC,6BAAgB,EAAC,CAAC;IACxC;IACA;IACA;IACA;IACA;IACAC,eAAe,CAACJ,UAAU,EAAE,CACxB;MAAEK,IAAI,EAAE,4CAA4C;MAAEC,KAAK,EAAE;IAAO,CAAC,EACrE;MAAED,IAAI,EAAE,6CAA6C;MAAEC,KAAK,EAAEJ;IAAc,CAAC,CAChF,CAAC;IACF,OAAOJ,MAAM;EACjB,CAAC,CAAC;AACN,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AALAS,OAAA,CAAAV,kBAAA,GAAAA,kBAAA;AAMO,SAASO,eAAeA,CAACJ,UAAU,EAAEQ,eAAe,EAAE;EACzD;EACA,IAAI,CAACR,UAAU,CAACS,SAAS,EAAE;IACvBT,UAAU,CAACS,SAAS,GAAG;MAAEC,MAAM,EAAE;IAAG,CAAC;EACzC;EACAF,eAAe,CAACG,OAAO,CAAC,CAAC;IAAEN,IAAI;IAAEC;EAAM,CAAC,KAAK;IACzC,MAAMM,mBAAmB,GAAGZ,UAAU,CAACS,SAAS,CAACC,MAAM,CAACG,SAAS,CAAEC,IAAI;MAAA,IAAAC,OAAA;MAAA,OAAK,EAAAA,OAAA,GAAAD,IAAI,CAACE,CAAC,cAAAD,OAAA,uBAANA,OAAA,CAAQV,IAAI,MAAKA,IAAI;IAAA,EAAC;IAClG,IAAIO,mBAAmB,KAAK,CAAC,CAAC,EAAE;MAC5B;MACAZ,UAAU,CAACS,SAAS,CAACC,MAAM,CAACE,mBAAmB,CAAC,CAACK,CAAC,GAAGX,KAAK;IAC9D,CAAC,MACI;MACD;MACAN,UAAU,CAACS,SAAS,CAACC,MAAM,CAACQ,IAAI,CAAC;QAC7BF,CAAC,EAAE;UAAEX;QAAK,CAAC;QACXY,CAAC,EAAEX;MACP,CAAC,CAAC;IACN;EACJ,CAAC,CAAC;AACN","ignoreList":[]}
{"version":3,"names":["_configPlugins","require","_ios","_codeInjection","withAppDelegateSwiftModifications","configOuter","_","withAppDelegate","config","stringContents","modResults","contents","regex","RegExp","CIO_APP_PUSH_NOTIFICATIONS_HANDLER_SNIPPET","match","injectCodeByMultiLineRegex","CIO_APP_PUSH_NOTIFICATIONS_HANDLER_REGEX","CIO_INITIALIZE_SDK_REGEX","CIO_INITIALIZE_SDK_SNIPPET","injectCodeBeforeMultiLineRegex","CIO_OVERRIDE_REMOTE_NOTIFICATION_REGEX","CIO_OVERRIDE_REMOTE_NOTIFICATION_SNIPPET","console","log","exports"],"sources":["withAppDelegateSwiftModifications.js"],"sourcesContent":["import { withAppDelegate } from '@expo/config-plugins';\nimport { CIO_OVERRIDE_REMOTE_NOTIFICATION_SNIPPET, CIO_APP_PUSH_NOTIFICATIONS_HANDLER_SNIPPET, CIO_INITIALIZE_SDK_SNIPPET, CIO_APP_PUSH_NOTIFICATIONS_HANDLER_REGEX, CIO_INITIALIZE_SDK_REGEX, CIO_OVERRIDE_REMOTE_NOTIFICATION_REGEX, } from '../helpers/constants/ios';\nimport { injectCodeByMultiLineRegex, injectCodeBeforeMultiLineRegex, } from '../helpers/utils/codeInjection';\nexport const withAppDelegateSwiftModifications = (configOuter, _) => {\n    return withAppDelegate(configOuter, async (config) => {\n        let stringContents = config.modResults.contents;\n        const regex = new RegExp(CIO_APP_PUSH_NOTIFICATIONS_HANDLER_SNIPPET);\n        const match = stringContents.match(regex);\n        if (!match) {\n            stringContents = injectCodeByMultiLineRegex(stringContents, CIO_APP_PUSH_NOTIFICATIONS_HANDLER_REGEX, CIO_APP_PUSH_NOTIFICATIONS_HANDLER_SNIPPET);\n            stringContents = injectCodeByMultiLineRegex(stringContents, CIO_INITIALIZE_SDK_REGEX, CIO_INITIALIZE_SDK_SNIPPET);\n            stringContents = injectCodeBeforeMultiLineRegex(stringContents, CIO_OVERRIDE_REMOTE_NOTIFICATION_REGEX, CIO_OVERRIDE_REMOTE_NOTIFICATION_SNIPPET);\n            config.modResults.contents = stringContents;\n        }\n        else {\n            console.log('Customerio AppDelegate changes already exist. Skipping...');\n        }\n        return config;\n    });\n};\n"],"mappings":";;;;;;AAAA,IAAAA,cAAA,GAAAC,OAAA;AACA,IAAAC,IAAA,GAAAD,OAAA;AACA,IAAAE,cAAA,GAAAF,OAAA;AACO,MAAMG,iCAAiC,GAAGA,CAACC,WAAW,EAAEC,CAAC,KAAK;EACjE,OAAO,IAAAC,8BAAe,EAACF,WAAW,EAAE,MAAOG,MAAM,IAAK;IAClD,IAAIC,cAAc,GAAGD,MAAM,CAACE,UAAU,CAACC,QAAQ;IAC/C,MAAMC,KAAK,GAAG,IAAIC,MAAM,CAACC,+CAA0C,CAAC;IACpE,MAAMC,KAAK,GAAGN,cAAc,CAACM,KAAK,CAACH,KAAK,CAAC;IACzC,IAAI,CAACG,KAAK,EAAE;MACRN,cAAc,GAAG,IAAAO,yCAA0B,EAACP,cAAc,EAAEQ,6CAAwC,EAAEH,+CAA0C,CAAC;MACjJL,cAAc,GAAG,IAAAO,yCAA0B,EAACP,cAAc,EAAES,6BAAwB,EAAEC,+BAA0B,CAAC;MACjHV,cAAc,GAAG,IAAAW,6CAA8B,EAACX,cAAc,EAAEY,2CAAsC,EAAEC,6CAAwC,CAAC;MACjJd,MAAM,CAACE,UAAU,CAACC,QAAQ,GAAGF,cAAc;IAC/C,CAAC,MACI;MACDc,OAAO,CAACC,GAAG,CAAC,2DAA2D,CAAC;IAC5E;IACA,OAAOhB,MAAM;EACjB,CAAC,CAAC;AACN,CAAC;AAACiB,OAAA,CAAArB,iCAAA,GAAAA,iCAAA","ignoreList":[]}
{"version":3,"names":["_configPlugins","require","_fileManagement","_utils","withGoogleServicesJsonFile","config","cioProps","withXcodeProject","props","_cioProps$pushNotific","useFcm","isFcmPushProvider","console","log","iosPath","modRequest","platformProjectRoot","googleServicesFile","pushNotification","appName","projectName","FileManagement","exists","_config$ios","ios","warn","copyFile","addFileToXcodeProject","modResults","e","error","exports","project","fileName","groupName","filepath","IOSConfig","XcodeUtils","ensureGroupRecursively","addResourceFileToGroup","isBuildFile"],"sources":["withGoogleServicesJsonFile.js"],"sourcesContent":["import { withXcodeProject, IOSConfig, } from '@expo/config-plugins';\nimport { FileManagement } from './../helpers/utils/fileManagement';\nimport { isFcmPushProvider } from './utils';\nexport const withGoogleServicesJsonFile = (config, cioProps) => {\n    return withXcodeProject(config, async (props) => {\n        const useFcm = isFcmPushProvider(cioProps);\n        if (!useFcm) {\n            // Nothing to do, for providers other than FCM, the Google services JSON file isn't needed\n            return props;\n        }\n        console.log('Only specify Customer.io ios.pushNotification.googleServicesFile config if you are not already including' +\n            ' GoogleService-Info.plist as part of Firebase integration');\n        // googleServicesFile\n        const iosPath = props.modRequest.platformProjectRoot;\n        const googleServicesFile = cioProps.pushNotification?.googleServicesFile;\n        const appName = props.modRequest.projectName;\n        if (FileManagement.exists(`${iosPath}/GoogleService-Info.plist`)) {\n            console.log(`File already exists: ${iosPath}/GoogleService-Info.plist. Skipping...`);\n            return props;\n        }\n        if (FileManagement.exists(`${iosPath}/${appName}/GoogleService-Info.plist`)) {\n            // This is where RN Firebase potentially copies GoogleService-Info.plist\n            // Do not copy if it's already done by Firebase to avoid conflict in Resources\n            console.log(`File already exists: ${iosPath}/${appName}/GoogleService-Info.plist. Skipping...`);\n            return props;\n        }\n        if (googleServicesFile && FileManagement.exists(googleServicesFile)) {\n            if (config.ios?.googleServicesFile) {\n                console.warn('Specifying both Expo ios.googleServicesFile and Customer.io ios.pushNotification.googleServicesFile can cause a conflict' +\n                    ' duplicating GoogleService-Info.plist in the iOS project resources. Please remove Customer.io ios.pushNotification.googleServicesFile');\n            }\n            try {\n                FileManagement.copyFile(googleServicesFile, `${iosPath}/GoogleService-Info.plist`);\n                addFileToXcodeProject(props.modResults, 'GoogleService-Info.plist');\n            }\n            catch (e) {\n                console.error(`There was an error copying your GoogleService-Info.plist file. You can copy it manually into ${iosPath}/GoogleService-Info.plist`);\n            }\n        }\n        else {\n            console.error(`The Google Services file provided in ${googleServicesFile} doesn't seem to exist. You can copy it manually into ${iosPath}/GoogleService-Info.plist`);\n        }\n        return props;\n    });\n};\nfunction addFileToXcodeProject(project, fileName) {\n    const groupName = 'Resources';\n    const filepath = fileName;\n    if (!IOSConfig.XcodeUtils.ensureGroupRecursively(project, groupName)) {\n        console.error(`Error copying GoogleService-Info.plist. Failed to find or create '${groupName}' group in Xcode.`);\n        return;\n    }\n    // Add GoogleService-Info.plist to the Xcode project\n    IOSConfig.XcodeUtils.addResourceFileToGroup({\n        project,\n        filepath,\n        groupName,\n        isBuildFile: true,\n    });\n}\n"],"mappings":";;;;;;AAAA,IAAAA,cAAA,GAAAC,OAAA;AACA,IAAAC,eAAA,GAAAD,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AACO,MAAMG,0BAA0B,GAAGA,CAACC,MAAM,EAAEC,QAAQ,KAAK;EAC5D,OAAO,IAAAC,+BAAgB,EAACF,MAAM,EAAE,MAAOG,KAAK,IAAK;IAAA,IAAAC,qBAAA;IAC7C,MAAMC,MAAM,GAAG,IAAAC,wBAAiB,EAACL,QAAQ,CAAC;IAC1C,IAAI,CAACI,MAAM,EAAE;MACT;MACA,OAAOF,KAAK;IAChB;IACAI,OAAO,CAACC,GAAG,CAAC,0GAA0G,GAClH,2DAA2D,CAAC;IAChE;IACA,MAAMC,OAAO,GAAGN,KAAK,CAACO,UAAU,CAACC,mBAAmB;IACpD,MAAMC,kBAAkB,IAAAR,qBAAA,GAAGH,QAAQ,CAACY,gBAAgB,cAAAT,qBAAA,uBAAzBA,qBAAA,CAA2BQ,kBAAkB;IACxE,MAAME,OAAO,GAAGX,KAAK,CAACO,UAAU,CAACK,WAAW;IAC5C,IAAIC,8BAAc,CAACC,MAAM,CAAC,GAAGR,OAAO,2BAA2B,CAAC,EAAE;MAC9DF,OAAO,CAACC,GAAG,CAAC,wBAAwBC,OAAO,wCAAwC,CAAC;MACpF,OAAON,KAAK;IAChB;IACA,IAAIa,8BAAc,CAACC,MAAM,CAAC,GAAGR,OAAO,IAAIK,OAAO,2BAA2B,CAAC,EAAE;MACzE;MACA;MACAP,OAAO,CAACC,GAAG,CAAC,wBAAwBC,OAAO,IAAIK,OAAO,wCAAwC,CAAC;MAC/F,OAAOX,KAAK;IAChB;IACA,IAAIS,kBAAkB,IAAII,8BAAc,CAACC,MAAM,CAACL,kBAAkB,CAAC,EAAE;MAAA,IAAAM,WAAA;MACjE,KAAAA,WAAA,GAAIlB,MAAM,CAACmB,GAAG,cAAAD,WAAA,eAAVA,WAAA,CAAYN,kBAAkB,EAAE;QAChCL,OAAO,CAACa,IAAI,CAAC,0HAA0H,GACnI,uIAAuI,CAAC;MAChJ;MACA,IAAI;QACAJ,8BAAc,CAACK,QAAQ,CAACT,kBAAkB,EAAE,GAAGH,OAAO,2BAA2B,CAAC;QAClFa,qBAAqB,CAACnB,KAAK,CAACoB,UAAU,EAAE,0BAA0B,CAAC;MACvE,CAAC,CACD,OAAOC,CAAC,EAAE;QACNjB,OAAO,CAACkB,KAAK,CAAC,gGAAgGhB,OAAO,2BAA2B,CAAC;MACrJ;IACJ,CAAC,MACI;MACDF,OAAO,CAACkB,KAAK,CAAC,wCAAwCb,kBAAkB,yDAAyDH,OAAO,2BAA2B,CAAC;IACxK;IACA,OAAON,KAAK;EAChB,CAAC,CAAC;AACN,CAAC;AAACuB,OAAA,CAAA3B,0BAAA,GAAAA,0BAAA;AACF,SAASuB,qBAAqBA,CAACK,OAAO,EAAEC,QAAQ,EAAE;EAC9C,MAAMC,SAAS,GAAG,WAAW;EAC7B,MAAMC,QAAQ,GAAGF,QAAQ;EACzB,IAAI,CAACG,wBAAS,CAACC,UAAU,CAACC,sBAAsB,CAACN,OAAO,EAAEE,SAAS,CAAC,EAAE;IAClEtB,OAAO,CAACkB,KAAK,CAAC,qEAAqEI,SAAS,mBAAmB,CAAC;IAChH;EACJ;EACA;EACAE,wBAAS,CAACC,UAAU,CAACE,sBAAsB,CAAC;IACxCP,OAAO;IACPG,QAAQ;IACRD,SAAS;IACTM,WAAW,EAAE;EACjB,CAAC,CAAC;AACN","ignoreList":[]}
{"version":3,"names":["withStringsXml","getPluginVersion","withProjectStrings","config","stringsXml","modResults","pluginVersion","addStringsToXml","name","value","stringResources","resources","string","forEach","existingStringIndex","findIndex","item","_item$$","$","_","push"],"sources":["withProjectStrings.ts"],"sourcesContent":["import { ConfigPlugin, withStringsXml } from '@expo/config-plugins';\nimport { getPluginVersion } from '../helpers/utils/pluginUtils';\n\n/**\n * Adds or updates string resources in Android's strings.xml required by the plugin\n */\nexport const withProjectStrings: ConfigPlugin = (config) => {\n  return withStringsXml(config, (config) => {\n    const stringsXml = config.modResults;\n    const pluginVersion = getPluginVersion();\n\n    // Updating meta-data in AndroidManifest.xml fails on Manifest merging, so we're updating\n    // the strings here instead\n    // These strings are added to the strings.xml file by Customer.io's React Native SDK\n    // We're updating them here to include the Expo client source and version so user agent\n    // can be generated correctly for Expo apps\n    addStringsToXml(stringsXml, [\n      { name: 'customer_io_react_native_sdk_client_source', value: 'Expo' },\n      { name: 'customer_io_react_native_sdk_client_version', value: pluginVersion },\n    ]);\n\n    return config;\n  });\n};\n\n/**\n * Adds or updates multiple string resources in Android's strings.xml\n * @param stringsXml - Parsed strings.xml object\n * @param stringResources - Array of string resources to add or update\n * @returns Updated strings.xml object\n */\nexport function addStringsToXml(\n  stringsXml: any,\n  stringResources: { name: string, value: string }[]\n) {\n  // Ensure the resource exists\n  if (!stringsXml.resources) {\n    stringsXml.resources = { string: [] };\n  }\n\n  stringResources.forEach(({ name, value }) => {\n    const existingStringIndex = stringsXml.resources.string.findIndex(\n      (item: { $: { name: string } }) => item.$?.name === name\n    );\n\n    if (existingStringIndex !== -1) {\n      // Update the existing string\n      stringsXml.resources.string[existingStringIndex]._ = value;\n    } else {\n      // Add a new string resource\n      stringsXml.resources.string.push({\n        $: { name },\n        _: value,\n      });\n    }\n  });\n}\n"],"mappings":"AAAA,SAAuBA,cAAc,QAAQ,sBAAsB;AACnE,SAASC,gBAAgB,QAAQ,8BAA8B;;AAE/D;AACA;AACA;AACA,OAAO,MAAMC,kBAAgC,GAAIC,MAAM,IAAK;EAC1D,OAAOH,cAAc,CAACG,MAAM,EAAGA,MAAM,IAAK;IACxC,MAAMC,UAAU,GAAGD,MAAM,CAACE,UAAU;IACpC,MAAMC,aAAa,GAAGL,gBAAgB,CAAC,CAAC;;IAExC;IACA;IACA;IACA;IACA;IACAM,eAAe,CAACH,UAAU,EAAE,CAC1B;MAAEI,IAAI,EAAE,4CAA4C;MAAEC,KAAK,EAAE;IAAO,CAAC,EACrE;MAAED,IAAI,EAAE,6CAA6C;MAAEC,KAAK,EAAEH;IAAc,CAAC,CAC9E,CAAC;IAEF,OAAOH,MAAM;EACf,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASI,eAAeA,CAC7BH,UAAe,EACfM,eAAkD,EAClD;EACA;EACA,IAAI,CAACN,UAAU,CAACO,SAAS,EAAE;IACzBP,UAAU,CAACO,SAAS,GAAG;MAAEC,MAAM,EAAE;IAAG,CAAC;EACvC;EAEAF,eAAe,CAACG,OAAO,CAAC,CAAC;IAAEL,IAAI;IAAEC;EAAM,CAAC,KAAK;IAC3C,MAAMK,mBAAmB,GAAGV,UAAU,CAACO,SAAS,CAACC,MAAM,CAACG,SAAS,CAC9DC,IAA6B;MAAA,IAAAC,OAAA;MAAA,OAAK,EAAAA,OAAA,GAAAD,IAAI,CAACE,CAAC,cAAAD,OAAA,uBAANA,OAAA,CAAQT,IAAI,MAAKA,IAAI;IAAA,CAC1D,CAAC;IAED,IAAIM,mBAAmB,KAAK,CAAC,CAAC,EAAE;MAC9B;MACAV,UAAU,CAACO,SAAS,CAACC,MAAM,CAACE,mBAAmB,CAAC,CAACK,CAAC,GAAGV,KAAK;IAC5D,CAAC,MAAM;MACL;MACAL,UAAU,CAACO,SAAS,CAACC,MAAM,CAACQ,IAAI,CAAC;QAC/BF,CAAC,EAAE;UAAEV;QAAK,CAAC;QACXW,CAAC,EAAEV;MACL,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;AACJ","ignoreList":[]}
{"version":3,"names":["readFile","writeFile","appendFile","existsSync","copyFileSync","mkdirSync","writeFileSync","readFileSync","FileManagement","read","path","Promise","resolve","reject","err","data","write","contents","append","exists","copyFile","src","dest","console","log","mkdir","options"],"sources":["fileManagement.ts"],"sourcesContent":["import {\n  readFile,\n  writeFile,\n  appendFile,\n  existsSync,\n  copyFileSync,\n  mkdirSync,\n  writeFileSync,\n  readFileSync,\n  MakeDirectoryOptions,\n} from 'fs';\n\nexport class FileManagement {\n  static async read(path: string): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      readFile(path, 'utf8', (err, data) => {\n        if (err || !data) {\n          reject(err);\n          return;\n        }\n        resolve(data);\n      });\n    });\n  }\n\n  static async write(path: string, contents: string): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      writeFile(path, contents, 'utf8', (err) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve();\n      });\n    });\n  }\n\n  static async append(path: string, contents: string): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      appendFile(path, contents, 'utf8', (err) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve();\n      });\n    });\n  }\n\n  static exists(path: string) {\n    return existsSync(path);\n  }\n\n  static copyFile(src: string, dest: string) {\n    try {\n      copyFileSync(src, dest);\n    } catch (err) {\n      console.log(`Error copying file from ${src} to ${dest}: `, err);\n    }\n  }\n\n  static mkdir(path: string, options: MakeDirectoryOptions) {\n    try {\n      mkdirSync(path, options);\n    } catch (err) {\n      console.log(`Error creating directory ${path}: `, err);\n    }\n  }\n\n  static writeFile(path: string, data: string) {\n    try {\n      writeFileSync(path, data);\n    } catch (err) {\n      console.log(`Error writing to file ${path}: `, err);\n    }\n  }\n\n  static readFile(path: string) {\n    try {\n      return readFileSync(path, 'utf-8');\n    } catch (err) {\n      console.log(`Error reading file ${path}: `, err);\n    }\n\n    return '';\n  }\n}\n"],"mappings":"AAAA,SACEA,QAAQ,EACRC,SAAS,EACTC,UAAU,EACVC,UAAU,EACVC,YAAY,EACZC,SAAS,EACTC,aAAa,EACbC,YAAY,QAEP,IAAI;AAEX,OAAO,MAAMC,cAAc,CAAC;EAC1B,aAAaC,IAAIA,CAACC,IAAY,EAAmB;IAC/C,OAAO,IAAIC,OAAO,CAAS,CAACC,OAAO,EAAEC,MAAM,KAAK;MAC9Cb,QAAQ,CAACU,IAAI,EAAE,MAAM,EAAE,CAACI,GAAG,EAAEC,IAAI,KAAK;QACpC,IAAID,GAAG,IAAI,CAACC,IAAI,EAAE;UAChBF,MAAM,CAACC,GAAG,CAAC;UACX;QACF;QACAF,OAAO,CAACG,IAAI,CAAC;MACf,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEA,aAAaC,KAAKA,CAACN,IAAY,EAAEO,QAAgB,EAAiB;IAChE,OAAO,IAAIN,OAAO,CAAO,CAACC,OAAO,EAAEC,MAAM,KAAK;MAC5CZ,SAAS,CAACS,IAAI,EAAEO,QAAQ,EAAE,MAAM,EAAGH,GAAG,IAAK;QACzC,IAAIA,GAAG,EAAE;UACPD,MAAM,CAACC,GAAG,CAAC;UACX;QACF;QACAF,OAAO,CAAC,CAAC;MACX,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEA,aAAaM,MAAMA,CAACR,IAAY,EAAEO,QAAgB,EAAiB;IACjE,OAAO,IAAIN,OAAO,CAAO,CAACC,OAAO,EAAEC,MAAM,KAAK;MAC5CX,UAAU,CAACQ,IAAI,EAAEO,QAAQ,EAAE,MAAM,EAAGH,GAAG,IAAK;QAC1C,IAAIA,GAAG,EAAE;UACPD,MAAM,CAACC,GAAG,CAAC;UACX;QACF;QACAF,OAAO,CAAC,CAAC;MACX,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEA,OAAOO,MAAMA,CAACT,IAAY,EAAE;IAC1B,OAAOP,UAAU,CAACO,IAAI,CAAC;EACzB;EAEA,OAAOU,QAAQA,CAACC,GAAW,EAAEC,IAAY,EAAE;IACzC,IAAI;MACFlB,YAAY,CAACiB,GAAG,EAAEC,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOR,GAAG,EAAE;MACZS,OAAO,CAACC,GAAG,CAAC,2BAA2BH,GAAG,OAAOC,IAAI,IAAI,EAAER,GAAG,CAAC;IACjE;EACF;EAEA,OAAOW,KAAKA,CAACf,IAAY,EAAEgB,OAA6B,EAAE;IACxD,IAAI;MACFrB,SAAS,CAACK,IAAI,EAAEgB,OAAO,CAAC;IAC1B,CAAC,CAAC,OAAOZ,GAAG,EAAE;MACZS,OAAO,CAACC,GAAG,CAAC,4BAA4Bd,IAAI,IAAI,EAAEI,GAAG,CAAC;IACxD;EACF;EAEA,OAAOb,SAASA,CAACS,IAAY,EAAEK,IAAY,EAAE;IAC3C,IAAI;MACFT,aAAa,CAACI,IAAI,EAAEK,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOD,GAAG,EAAE;MACZS,OAAO,CAACC,GAAG,CAAC,yBAAyBd,IAAI,IAAI,EAAEI,GAAG,CAAC;IACrD;EACF;EAEA,OAAOd,QAAQA,CAACU,IAAY,EAAE;IAC5B,IAAI;MACF,OAAOH,YAAY,CAACG,IAAI,EAAE,OAAO,CAAC;IACpC,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZS,OAAO,CAACC,GAAG,CAAC,sBAAsBd,IAAI,IAAI,EAAEI,GAAG,CAAC;IAClD;IAEA,OAAO,EAAE;EACX;AACF","ignoreList":[]}
{"version":3,"names":["withAppDelegate","getAppDelegateHeaderFilePath","CIO_APPDELEGATEDECLARATION_REGEX","CIO_APPDELEGATEHEADER_IMPORT_SNIPPET","CIO_APPDELEGATEHEADER_REGEX","CIO_APPDELEGATEHEADER_USER_NOTIFICATION_CENTER_SNIPPET","CIO_CONFIGURECIOSDKPUSHNOTIFICATION_SNIPPET","CIO_CONFIGUREDEEPLINK_KILLEDSTATE_SNIPPET","CIO_RCTBRIDGE_DEEPLINK_MODIFIEDOPTIONS_REGEX","CIO_DIDFAILTOREGISTERFORREMOTENOTIFICATIONSWITHERROR_REGEX","CIO_DIDFAILTOREGISTERFORREMOTENOTIFICATIONSWITHERROR_SNIPPET","CIO_DIDFINISHLAUNCHINGMETHOD_REGEX","CIO_DIDREGISTERFORREMOTENOTIFICATIONSWITHDEVICETOKEN_REGEX","CIO_DIDREGISTERFORREMOTENOTIFICATIONSWITHDEVICETOKEN_SNIPPET","CIO_LAUNCHOPTIONS_DEEPLINK_MODIFIEDOPTIONS_REGEX","CIO_PUSHNOTIFICATIONHANDLERDECLARATION_SNIPPET","CIO_LAUNCHOPTIONS_MODIFIEDOPTIONS_SNIPPET","CIO_RCTBRIDGE_DEEPLINK_MODIFIEDOPTIONS_SNIPPET","CIO_DEEPLINK_COMMENT_REGEX","CIO_INITIALIZECIOSDK_SNIPPET","injectCodeBeforeMultiLineRegex","injectCodeByLineNumber","injectCodeByMultiLineRegex","injectCodeByMultiLineRegexAndReplaceLine","replaceCodeByRegex","matchRegexExists","FileManagement","isFcmPushProvider","addImport","stringContents","appName","importRegex","addedImport","getImportSnippet","match","endOfMatchIndex","index","undefined","length","addNotificationHandlerDeclaration","addNotificationConfiguration","addInitializeNativeCioSdk","addHandleDeeplinkInKilledStateConfiguration","regex","addDidFailToRegisterForRemoteNotificationsWithError","addDidRegisterForRemoteNotificationsWithDeviceToken","addExpoNotificationsHeaderModification","addFirebaseDelegateForwardDeclarationIfNeeded","addAppdelegateHeaderModification","replace","interfaceDeclaration","_groupedDelegates","existingDelegates","includes","trim","addHandleDeeplinkInKilledState","snippet","withAppDelegateModifications","configOuter","props","config","modResults","contents","RegExp","modRequest","projectName","_props$pushNotificati","_props$pushNotificati2","headerPath","projectRoot","headerContent","read","write","pushNotification","disableNotificationRegistration","handleDeeplinkInKilledState","console","log"],"sources":["withAppDelegateModifications.ts"],"sourcesContent":["import { ConfigPlugin, withAppDelegate } from '@expo/config-plugins';\nimport { getAppDelegateHeaderFilePath } from '@expo/config-plugins/build/ios/Paths';\n\nimport {\n  CIO_APPDELEGATEDECLARATION_REGEX,\n  CIO_APPDELEGATEHEADER_IMPORT_SNIPPET,\n  CIO_APPDELEGATEHEADER_REGEX,\n  CIO_APPDELEGATEHEADER_USER_NOTIFICATION_CENTER_SNIPPET,\n  CIO_CONFIGURECIOSDKPUSHNOTIFICATION_SNIPPET,\n  CIO_CONFIGUREDEEPLINK_KILLEDSTATE_SNIPPET,\n  CIO_RCTBRIDGE_DEEPLINK_MODIFIEDOPTIONS_REGEX,\n  CIO_DIDFAILTOREGISTERFORREMOTENOTIFICATIONSWITHERROR_REGEX,\n  CIO_DIDFAILTOREGISTERFORREMOTENOTIFICATIONSWITHERROR_SNIPPET,\n  CIO_DIDFINISHLAUNCHINGMETHOD_REGEX,\n  CIO_DIDREGISTERFORREMOTENOTIFICATIONSWITHDEVICETOKEN_REGEX,\n  CIO_DIDREGISTERFORREMOTENOTIFICATIONSWITHDEVICETOKEN_SNIPPET,\n  CIO_LAUNCHOPTIONS_DEEPLINK_MODIFIEDOPTIONS_REGEX,\n  CIO_PUSHNOTIFICATIONHANDLERDECLARATION_SNIPPET,\n  CIO_LAUNCHOPTIONS_MODIFIEDOPTIONS_SNIPPET,\n  CIO_RCTBRIDGE_DEEPLINK_MODIFIEDOPTIONS_SNIPPET,\n  CIO_DEEPLINK_COMMENT_REGEX,\n  CIO_INITIALIZECIOSDK_SNIPPET,\n} from '../helpers/constants/ios';\nimport {\n  injectCodeBeforeMultiLineRegex,\n  injectCodeByLineNumber,\n  injectCodeByMultiLineRegex,\n  injectCodeByMultiLineRegexAndReplaceLine,\n  replaceCodeByRegex,\n  matchRegexExists,\n} from '../helpers/utils/codeInjection';\nimport { FileManagement } from '../helpers/utils/fileManagement';\nimport type { CustomerIOPluginOptionsIOS } from '../types/cio-types';\nimport { isFcmPushProvider } from './utils';\n\nconst addImport = (stringContents: string, appName: string) => {\n  const importRegex = /^(#import .*)\\n/gm;\n  const addedImport = getImportSnippet(appName);\n\n  const match = stringContents.match(importRegex);\n  let endOfMatchIndex: number;\n  if (!match || match.index === undefined) {\n    // No imports found, just add to start of file:\n    endOfMatchIndex = 0;\n  } else {\n    // Add after first import:\n    endOfMatchIndex = match.index + match[0].length;\n  }\n\n  stringContents = injectCodeByLineNumber(\n    stringContents,\n    endOfMatchIndex,\n    addedImport\n  );\n\n  return stringContents;\n};\n\nconst addNotificationHandlerDeclaration = (stringContents: string) => {\n  stringContents = injectCodeByMultiLineRegex(\n    stringContents,\n    CIO_APPDELEGATEDECLARATION_REGEX,\n    CIO_PUSHNOTIFICATIONHANDLERDECLARATION_SNIPPET\n  );\n\n  return stringContents;\n};\n\nconst addNotificationConfiguration = (stringContents: string) => {\n  stringContents = injectCodeBeforeMultiLineRegex(\n    stringContents,\n    CIO_DIDFINISHLAUNCHINGMETHOD_REGEX,\n    CIO_CONFIGURECIOSDKPUSHNOTIFICATION_SNIPPET\n  );\n\n  return stringContents;\n};\n\nconst addInitializeNativeCioSdk = (stringContents: string) => {\n  stringContents = injectCodeBeforeMultiLineRegex(\n    stringContents,\n    CIO_DIDFINISHLAUNCHINGMETHOD_REGEX,\n    CIO_INITIALIZECIOSDK_SNIPPET\n  );\n\n  return stringContents;\n};\n\nconst addHandleDeeplinkInKilledStateConfiguration = (\n  stringContents: string,\n  regex: RegExp\n) => {\n  stringContents = injectCodeBeforeMultiLineRegex(\n    stringContents,\n    regex,\n    CIO_CONFIGUREDEEPLINK_KILLEDSTATE_SNIPPET\n  );\n\n  return stringContents;\n};\n\nconst addDidFailToRegisterForRemoteNotificationsWithError = (\n  stringContents: string\n) => {\n  stringContents = injectCodeByMultiLineRegexAndReplaceLine(\n    stringContents,\n    CIO_DIDFAILTOREGISTERFORREMOTENOTIFICATIONSWITHERROR_REGEX,\n    CIO_DIDFAILTOREGISTERFORREMOTENOTIFICATIONSWITHERROR_SNIPPET\n  );\n\n  return stringContents;\n};\n\nconst addDidRegisterForRemoteNotificationsWithDeviceToken = (\n  stringContents: string\n) => {\n  stringContents = injectCodeByMultiLineRegexAndReplaceLine(\n    stringContents,\n    CIO_DIDREGISTERFORREMOTENOTIFICATIONSWITHDEVICETOKEN_REGEX,\n    CIO_DIDREGISTERFORREMOTENOTIFICATIONSWITHDEVICETOKEN_SNIPPET\n  );\n\n  return stringContents;\n};\n\n// Adds required import for Expo Notifications package in AppDelegate.\n// Required to call functions from the package.\nconst addExpoNotificationsHeaderModification = (stringContents: string) => {\n  stringContents = injectCodeByLineNumber(\n    stringContents,\n    0,\n    `\n#if __has_include(<EXNotifications/EXNotificationCenterDelegate.h>)\n#import <EXNotifications/EXNotificationCenterDelegate.h>\n#endif\n`\n  );\n\n  return stringContents;\n};\n\nconst addFirebaseDelegateForwardDeclarationIfNeeded = (stringContents: string) => {\n  stringContents = injectCodeByLineNumber(\n    stringContents,\n    0,\n    '@protocol FIRMessagingDelegate;'\n  );\n\n  return stringContents;\n};\n\nconst addAppdelegateHeaderModification = (stringContents: string) => {\n  // Add UNUserNotificationCenterDelegate if needed\n  stringContents = stringContents.replace(\n    CIO_APPDELEGATEHEADER_REGEX,\n    (match, interfaceDeclaration, _groupedDelegates, existingDelegates) => {\n      if (\n        existingDelegates &&\n        existingDelegates.includes(\n          CIO_APPDELEGATEHEADER_USER_NOTIFICATION_CENTER_SNIPPET\n        )\n      ) {\n        // The AppDelegate declaration already includes UNUserNotificationCenterDelegate, so we don't need to modify it\n        return match;\n      } else if (existingDelegates) {\n        // Other delegates exist, append ours\n        return `${CIO_APPDELEGATEHEADER_IMPORT_SNIPPET}\n${interfaceDeclaration}<${existingDelegates}, ${CIO_APPDELEGATEHEADER_USER_NOTIFICATION_CENTER_SNIPPET}>\n`;\n      } else {\n        // No delegates exist, add ours\n        return `${CIO_APPDELEGATEHEADER_IMPORT_SNIPPET}\n${interfaceDeclaration.trim()} <${CIO_APPDELEGATEHEADER_USER_NOTIFICATION_CENTER_SNIPPET}>\n`;\n      }\n    }\n  );\n\n  return stringContents;\n};\n\nconst addHandleDeeplinkInKilledState = (stringContents: string) => {\n  // Find if the deep link code snippet is already present\n  if (matchRegexExists(stringContents, CIO_DEEPLINK_COMMENT_REGEX)) {\n    return stringContents;\n  }\n\n  // Check if the app delegate is using RCTBridge or LaunchOptions\n  let snippet = undefined;\n  let regex = CIO_LAUNCHOPTIONS_DEEPLINK_MODIFIEDOPTIONS_REGEX;\n  if (\n    matchRegexExists(\n      stringContents,\n      CIO_RCTBRIDGE_DEEPLINK_MODIFIEDOPTIONS_REGEX\n    )\n  ) {\n    snippet = CIO_RCTBRIDGE_DEEPLINK_MODIFIEDOPTIONS_SNIPPET;\n    regex = CIO_RCTBRIDGE_DEEPLINK_MODIFIEDOPTIONS_REGEX;\n  } else if (\n    matchRegexExists(\n      stringContents,\n      CIO_LAUNCHOPTIONS_DEEPLINK_MODIFIEDOPTIONS_REGEX\n    )\n  ) {\n    snippet = CIO_LAUNCHOPTIONS_MODIFIEDOPTIONS_SNIPPET;\n  }\n  // Add code only if the app delegate is using RCTBridge or LaunchOptions\n  if (snippet !== undefined) {\n    stringContents = addHandleDeeplinkInKilledStateConfiguration(\n      stringContents,\n      regex\n    );\n    stringContents = replaceCodeByRegex(stringContents, regex, snippet);\n  }\n  return stringContents;\n};\n\nexport const withAppDelegateModifications: ConfigPlugin<\n  CustomerIOPluginOptionsIOS\n> = (configOuter, props) => {\n  return withAppDelegate(configOuter, async (config) => {\n    let stringContents = config.modResults.contents;\n    const regex = new RegExp(\n      `#import <${config.modRequest.projectName}-Swift.h>`\n    );\n    const match = stringContents.match(regex);\n\n    if (!match) {\n      const headerPath = getAppDelegateHeaderFilePath(\n        config.modRequest.projectRoot\n      );\n      let headerContent = await FileManagement.read(headerPath);\n      headerContent = addAppdelegateHeaderModification(headerContent);\n      FileManagement.write(headerPath, headerContent);\n\n      stringContents = addImport(\n        stringContents,\n        config.modRequest.projectName as string\n      );\n      stringContents = addNotificationHandlerDeclaration(stringContents);\n\n      // unless this property is explicity set to true, push notification\n      // registration will be added to the AppDelegate\n      if (props.pushNotification?.disableNotificationRegistration !== true) {\n        stringContents = addNotificationConfiguration(stringContents);\n      }\n\n      stringContents = addInitializeNativeCioSdk(stringContents);\n\n      if (props.pushNotification?.handleDeeplinkInKilledState === true) {\n        stringContents = addHandleDeeplinkInKilledState(stringContents);\n      }\n\n      stringContents =\n        addDidFailToRegisterForRemoteNotificationsWithError(stringContents);\n      stringContents =\n        addDidRegisterForRemoteNotificationsWithDeviceToken(stringContents);\n\n      if (isFcmPushProvider(props)) {\n        stringContents = addFirebaseDelegateForwardDeclarationIfNeeded(stringContents);\n      }\n\n      stringContents = addExpoNotificationsHeaderModification(stringContents);\n\n      config.modResults.contents = stringContents;\n    } else {\n      console.log('Customerio AppDelegate changes already exist. Skipping...');\n    }\n\n    return config;\n  });\n};\nfunction getImportSnippet(appName: string) {\n  return `\n// Add swift bridge imports\n#import <ExpoModulesCore-Swift.h>\n#import <${appName}-Swift.h>\n  `;\n}\n"],"mappings":"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","ignoreList":[]}
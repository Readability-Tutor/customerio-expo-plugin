{"version":3,"names":["withXcodeProject","CIO_NOTIFICATION_TARGET_NAME","CIO_REGISTER_PUSHNOTIFICATION_SNIPPET","DEFAULT_BUNDLE_VERSION","LOCAL_PATH_TO_CIO_NSE_FILES","replaceCodeByRegex","injectCIONotificationPodfileCode","FileManagement","isFcmPushProvider","PLIST_FILENAME","ENV_FILENAME","TARGETED_DEVICE_FAMILY","addNotificationServiceExtension","options","xcodeProject","_options$pushNotifica","pushNotification","addPushNotificationFile","useRichPush","addRichPushXcodeProj","error","console","withCioNotificationsXcodeProject","configOuter","props","config","modRequest","ios","version","bundleShortVersion","appleTeamId","iosDeploymentTarget","useFrameworks","undefined","Error","projectName","platformProjectRoot","bundleIdentifier","buildNumber","bundleVersion","iosPath","appName","modifiedProjectFile","modResults","isFcmProvider","pbxTargetByName","warn","nsePath","mkdir","recursive","platformSpecificFiles","commonFiles","getTargetFile","filename","forEach","targetFile","copyFile","infoPlistTargetFile","updateNseInfoPlist","updateNseEnv","extGroup","addPbxGroup","groups","hash","project","objects","Object","keys","key","name","path","addToPbxGroup","uuid","projObjects","nseTarget","addTarget","addBuildPhase","configurations","pbxXCBuildConfigurationSection","buildSettings","PRODUCT_NAME","buildSettingsObj","DEVELOPMENT_TEAM","IPHONEOS_DEPLOYMENT_TARGET","CODE_SIGN_STYLE","SWIFT_VERSION","addTargetAttribute","payload","BUNDLE_SHORT_VERSION_RE","BUNDLE_VERSION_RE","plistFileString","readFile","writeFile","envFileName","_options$pushNotifica2","CDP_API_KEY_RE","REGION_RE","envFileContent","cdpApiKey","region","env","regionMap","us","eu","mappedRegion","toLowerCase","sourceFile","targetFileName","appPath","exists","log","updatePushFile","group","pbxCreateGroup","classesKey","findPBXGroupKey","addSourceFile","_options$pushNotifica3","_options$pushNotifica4","_options$pushNotifica5","_options$pushNotifica6","_options$pushNotifica7","REGISTER_RE","disableNotificationRegistration","snippet","toUpperCase","autoTrackPushEvents","toString","autoFetchDeviceToken","showPushAppInForeground"],"sources":["withNotificationsXcodeProject.ts"],"sourcesContent":["import {\n  ConfigPlugin,\n  XcodeProject,\n  withXcodeProject,\n} from '@expo/config-plugins';\n\nimport {\n  CIO_NOTIFICATION_TARGET_NAME,\n  CIO_REGISTER_PUSHNOTIFICATION_SNIPPET,\n  DEFAULT_BUNDLE_VERSION,\n  LOCAL_PATH_TO_CIO_NSE_FILES,\n} from '../helpers/constants/ios';\nimport { replaceCodeByRegex } from '../helpers/utils/codeInjection';\nimport { injectCIONotificationPodfileCode } from '../helpers/utils/injectCIOPodfileCode';\nimport type { CustomerIOPluginOptionsIOS } from '../types/cio-types';\nimport { FileManagement } from './../helpers/utils/fileManagement';\nimport { isFcmPushProvider } from './utils';\n\nconst PLIST_FILENAME = `${CIO_NOTIFICATION_TARGET_NAME}-Info.plist`;\nconst ENV_FILENAME = 'Env.swift';\n\nconst TARGETED_DEVICE_FAMILY = `\"1,2\"`;\n\nconst addNotificationServiceExtension = async (\n  options: CustomerIOPluginOptionsIOS,\n  xcodeProject: XcodeProject\n) => {\n  try {\n    if (options.pushNotification) {\n      await addPushNotificationFile(options, xcodeProject);\n    }\n\n    if (options.pushNotification?.useRichPush === true) {\n      await addRichPushXcodeProj(options, xcodeProject);\n    }\n    return xcodeProject;\n  } catch (error: any) {\n    console.error(error);\n    return null;\n  }\n};\n\nexport const withCioNotificationsXcodeProject: ConfigPlugin<\n  CustomerIOPluginOptionsIOS\n> = (configOuter, props) => {\n  return withXcodeProject(configOuter, async (config) => {\n    const { modRequest, ios, version: bundleShortVersion } = config;\n    const { appleTeamId, iosDeploymentTarget, useFrameworks } = props;\n\n    if (ios === undefined)\n      throw new Error(\n        'Adding NotificationServiceExtension failed: ios config missing from app.config.js or app.json.'\n      );\n\n    // projectName and platformProjectRoot translates to appName and iosPath in addNotificationServiceExtension()\n    const { projectName, platformProjectRoot } = modRequest;\n    const { bundleIdentifier, buildNumber } = ios;\n\n    if (bundleShortVersion === undefined) {\n      throw new Error(\n        'Adding NotificationServiceExtension failed: version missing from app.config.js or app.json'\n      );\n    }\n\n    if (bundleIdentifier === undefined) {\n      throw new Error(\n        'Adding NotificationServiceExtension failed: ios.bundleIdentifier missing from app.config.js or app.json'\n      );\n    }\n\n    if (projectName === undefined) {\n      throw new Error(\n        'Adding NotificationServiceExtension failed: name missing from app.config.js or app.json'\n      );\n    }\n\n    const options = {\n      ...props,\n      appleTeamId,\n      bundleIdentifier,\n      bundleShortVersion,\n      bundleVersion: buildNumber || DEFAULT_BUNDLE_VERSION,\n      iosPath: platformProjectRoot,\n      appName: projectName,\n      useFrameworks,\n      iosDeploymentTarget,\n    } satisfies CustomerIOPluginOptionsIOS;\n\n    const modifiedProjectFile = await addNotificationServiceExtension(\n      options,\n      config.modResults\n    );\n\n    if (modifiedProjectFile) {\n      config.modResults = modifiedProjectFile;\n    }\n\n    return config;\n  });\n};\n\nconst addRichPushXcodeProj = async (\n  options: CustomerIOPluginOptionsIOS,\n  xcodeProject: any\n) => {\n  const {\n    appleTeamId,\n    bundleIdentifier,\n    bundleShortVersion,\n    bundleVersion,\n    iosPath,\n    iosDeploymentTarget,\n    useFrameworks,\n  } = options;\n\n  const isFcmProvider = isFcmPushProvider(options);\n\n  await injectCIONotificationPodfileCode(iosPath, useFrameworks, isFcmProvider);\n\n  // Check if `CIO_NOTIFICATION_TARGET_NAME` group already exist in the project\n  // If true then skip creating a new group to avoid duplicate folders\n  if (xcodeProject.pbxTargetByName(CIO_NOTIFICATION_TARGET_NAME)) {\n    console.warn(\n      `${CIO_NOTIFICATION_TARGET_NAME} already exists in project. Skipping...`\n    );\n    return;\n  }\n\n  const nsePath = `${iosPath}/${CIO_NOTIFICATION_TARGET_NAME}`;\n  FileManagement.mkdir(nsePath, {\n    recursive: true,\n  });\n\n  const platformSpecificFiles = ['NotificationService.swift'];\n\n  const commonFiles = [\n    PLIST_FILENAME,\n    'NotificationService.h',\n    'NotificationService.m',\n    ENV_FILENAME,\n  ];\n\n  const getTargetFile = (filename: string) => `${nsePath}/${filename}`;\n  // Copy platform-specific files\n  platformSpecificFiles.forEach((filename) => {\n    const targetFile = getTargetFile(filename);\n    FileManagement.copyFile(\n      `${LOCAL_PATH_TO_CIO_NSE_FILES}/${\n        isFcmProvider ? 'fcm' : 'apn'\n      }/${filename}`,\n      targetFile\n    );\n  });\n\n  // Copy common files\n  commonFiles.forEach((filename) => {\n    const targetFile = getTargetFile(filename);\n    FileManagement.copyFile(\n      `${LOCAL_PATH_TO_CIO_NSE_FILES}/common/${filename}`,\n      targetFile\n    );\n  });\n\n  /* MODIFY COPIED EXTENSION FILES */\n  const infoPlistTargetFile = getTargetFile(PLIST_FILENAME);\n  updateNseInfoPlist({\n    bundleVersion,\n    bundleShortVersion,\n    infoPlistTargetFile,\n  });\n  updateNseEnv(options, getTargetFile(ENV_FILENAME));\n\n  // Create new PBXGroup for the extension\n  const extGroup = xcodeProject.addPbxGroup(\n    [...platformSpecificFiles, ...commonFiles], // Combine platform-specific and common files,\n    CIO_NOTIFICATION_TARGET_NAME,\n    CIO_NOTIFICATION_TARGET_NAME\n  );\n\n  // Add the new PBXGroup to the top level group. This makes the\n  // files / folder appear in the file explorer in Xcode.\n  const groups = xcodeProject.hash.project.objects['PBXGroup'];\n  Object.keys(groups).forEach((key) => {\n    if (groups[key].name === undefined && groups[key].path === undefined) {\n      xcodeProject.addToPbxGroup(extGroup.uuid, key);\n    }\n  });\n\n  // WORK AROUND for codeProject.addTarget BUG\n  // Xcode projects don't contain these if there is only one target\n  // An upstream fix should be made to the code referenced in this link:\n  //   - https://github.com/apache/cordova-node-xcode/blob/8b98cabc5978359db88dc9ff2d4c015cba40f150/lib/pbxProject.js#L860\n  const projObjects = xcodeProject.hash.project.objects;\n  projObjects['PBXTargetDependency'] = projObjects['PBXTargetDependency'] || {};\n  projObjects['PBXContainerItemProxy'] =\n    projObjects['PBXTargetDependency'] || {};\n\n  if (xcodeProject.pbxTargetByName(CIO_NOTIFICATION_TARGET_NAME)) {\n    console.warn(\n      `${CIO_NOTIFICATION_TARGET_NAME} already exists in project. Skipping...`\n    );\n    return;\n  }\n\n  // Add the NSE target\n  // This also adds PBXTargetDependency and PBXContainerItemProxy\n  const nseTarget = xcodeProject.addTarget(\n    CIO_NOTIFICATION_TARGET_NAME,\n    'app_extension',\n    CIO_NOTIFICATION_TARGET_NAME,\n    `${bundleIdentifier}.richpush`\n  );\n\n  // Add build phases to the new target\n  xcodeProject.addBuildPhase(\n    ['NotificationService.m', 'NotificationService.swift', 'Env.swift'],\n    'PBXSourcesBuildPhase',\n    'Sources',\n    nseTarget.uuid\n  );\n  xcodeProject.addBuildPhase(\n    [],\n    'PBXResourcesBuildPhase',\n    'Resources',\n    nseTarget.uuid\n  );\n\n  xcodeProject.addBuildPhase(\n    [],\n    'PBXFrameworksBuildPhase',\n    'Frameworks',\n    nseTarget.uuid\n  );\n\n  // Edit the Deployment info of the target\n  const configurations = xcodeProject.pbxXCBuildConfigurationSection();\n  for (const key in configurations) {\n    if (\n      typeof configurations[key].buildSettings !== 'undefined' &&\n      configurations[key].buildSettings.PRODUCT_NAME ===\n        `\"${CIO_NOTIFICATION_TARGET_NAME}\"`\n    ) {\n      const buildSettingsObj = configurations[key].buildSettings;\n      buildSettingsObj.DEVELOPMENT_TEAM = appleTeamId;\n      buildSettingsObj.IPHONEOS_DEPLOYMENT_TARGET =\n        iosDeploymentTarget || '15.1';\n      buildSettingsObj.TARGETED_DEVICE_FAMILY = TARGETED_DEVICE_FAMILY;\n      buildSettingsObj.CODE_SIGN_STYLE = 'Automatic';\n      buildSettingsObj.SWIFT_VERSION = 4.2;\n    }\n  }\n\n  // Add development team to the target & the main\n  xcodeProject.addTargetAttribute('DevelopmentTeam', appleTeamId, nseTarget);\n  xcodeProject.addTargetAttribute('DevelopmentTeam', appleTeamId);\n};\n\nconst updateNseInfoPlist = (payload: {\n  bundleVersion?: string;\n  bundleShortVersion?: string;\n  infoPlistTargetFile: string;\n}) => {\n  const BUNDLE_SHORT_VERSION_RE = /\\{\\{BUNDLE_SHORT_VERSION\\}\\}/;\n  const BUNDLE_VERSION_RE = /\\{\\{BUNDLE_VERSION\\}\\}/;\n\n  let plistFileString = FileManagement.readFile(payload.infoPlistTargetFile);\n\n  if (payload.bundleVersion) {\n    plistFileString = replaceCodeByRegex(\n      plistFileString,\n      BUNDLE_VERSION_RE,\n      payload.bundleVersion\n    );\n  }\n\n  if (payload.bundleShortVersion) {\n    plistFileString = replaceCodeByRegex(\n      plistFileString,\n      BUNDLE_SHORT_VERSION_RE,\n      payload.bundleShortVersion\n    );\n  }\n\n  FileManagement.writeFile(payload.infoPlistTargetFile, plistFileString);\n};\n\nconst updateNseEnv = (\n  options: CustomerIOPluginOptionsIOS,\n  envFileName: string\n) => {\n  const CDP_API_KEY_RE = /\\{\\{CDP_API_KEY\\}\\}/;\n  const REGION_RE = /\\{\\{REGION\\}\\}/;\n\n  let envFileContent = FileManagement.readFile(envFileName);\n  const { cdpApiKey, region } = options.pushNotification?.env || {\n    cdpApiKey: undefined,\n    region: undefined,\n  };\n\n  if (!cdpApiKey) {\n    throw new Error(\n      'Adding NotificationServiceExtension failed: ios.pushNotification.env.cdpApiKey is missing from app.config.js or app.json.'\n    );\n  }\n  envFileContent = replaceCodeByRegex(\n    envFileContent,\n    CDP_API_KEY_RE,\n    cdpApiKey\n  );\n\n  if (region) {\n    const regionMap = {\n      us: 'Region.US',\n      eu: 'Region.EU',\n    };\n    const mappedRegion = (regionMap as any)[region.toLowerCase()] || '';\n    if (!mappedRegion) {\n      console.warn(\n        `${region} is an invalid region. Please use the values from the docs: https://customer.io/docs/sdk/expo/getting-started/#configure-the-plugin`\n      );\n    } else {\n      envFileContent = replaceCodeByRegex(\n        envFileContent,\n        REGION_RE,\n        mappedRegion\n      );\n    }\n  }\n\n  FileManagement.writeFile(envFileName, envFileContent);\n};\n\nasync function addPushNotificationFile(\n  options: CustomerIOPluginOptionsIOS,\n  xcodeProject: any\n) {\n  // Maybe copy a different file with FCM config based on config\n  const { iosPath, appName } = options;\n  const isFcmProvider = isFcmPushProvider(options);\n  // PushService.swift is platform-specific and always lives in the platform folder\n  const sourceFile = `${isFcmProvider ? 'fcm' : 'apn'}/PushService.swift`;\n  const targetFileName = 'PushService.swift';\n  const appPath = `${iosPath}/${appName}`;\n  const getTargetFile = (filename: string) => `${appPath}/${filename}`;\n  const targetFile = getTargetFile(targetFileName);\n\n  // Check whether {file} exists in the project. If false, then add the file\n  // If {file} exists then skip and return\n  if (!FileManagement.exists(getTargetFile(targetFileName))) {\n    FileManagement.mkdir(appPath, {\n      recursive: true,\n    });\n\n    FileManagement.copyFile(\n      `${LOCAL_PATH_TO_CIO_NSE_FILES}/${sourceFile}`,\n      targetFile\n    );\n  } else {\n    console.log(`${getTargetFile(targetFileName)} already exists. Skipping...`);\n    return;\n  }\n\n  updatePushFile(options, targetFile);\n\n  const group = xcodeProject.pbxCreateGroup('CustomerIONotifications');\n  const classesKey = xcodeProject.findPBXGroupKey({ name: `${appName}` });\n  xcodeProject.addToPbxGroup(group, classesKey);\n\n  xcodeProject.addSourceFile(`${appName}/${targetFileName}`, null, group);\n}\n\nconst updatePushFile = (\n  options: CustomerIOPluginOptionsIOS,\n  envFileName: string\n) => {\n  const REGISTER_RE = /\\{\\{REGISTER_SNIPPET\\}\\}/;\n\n  let envFileContent = FileManagement.readFile(envFileName);\n  const disableNotificationRegistration =\n    options.pushNotification?.disableNotificationRegistration;\n  const { cdpApiKey, region } = options.pushNotification?.env || {\n    cdpApiKey: undefined,\n    region: undefined,\n  };\n  if (!cdpApiKey) {\n    throw new Error(\n      'Adding NotificationServiceExtension failed: ios.pushNotification.env.cdpApiKey is missing from app.config.js or app.json.'\n    );\n  }\n\n  let snippet = '';\n  // unless this property is explicity set to true, push notification\n  // registration will be added to the AppDelegate\n  if (disableNotificationRegistration !== true) {\n    snippet = CIO_REGISTER_PUSHNOTIFICATION_SNIPPET;\n  }\n  envFileContent = replaceCodeByRegex(envFileContent, REGISTER_RE, snippet);\n\n  envFileContent = replaceCodeByRegex(\n    envFileContent,\n    /\\{\\{CDP_API_KEY\\}\\}/,\n    cdpApiKey\n  );\n\n  if (region) {\n    envFileContent = replaceCodeByRegex(\n      envFileContent,\n      /\\{\\{REGION\\}\\}/,\n      region.toUpperCase()\n    );\n  }\n\n  const autoTrackPushEvents =\n    options.pushNotification?.autoTrackPushEvents !== false;\n  envFileContent = replaceCodeByRegex(\n    envFileContent,\n    /\\{\\{AUTO_TRACK_PUSH_EVENTS\\}\\}/,\n    autoTrackPushEvents.toString()\n  );\n\n  const autoFetchDeviceToken =\n    options.pushNotification?.autoFetchDeviceToken !== false;\n  envFileContent = replaceCodeByRegex(\n    envFileContent,\n    /\\{\\{AUTO_FETCH_DEVICE_TOKEN\\}\\}/,\n    autoFetchDeviceToken.toString()\n  );\n\n  const showPushAppInForeground =\n    options.pushNotification?.showPushAppInForeground !== false;\n  envFileContent = replaceCodeByRegex(\n    envFileContent,\n    /\\{\\{SHOW_PUSH_APP_IN_FOREGROUND\\}\\}/,\n    showPushAppInForeground.toString()\n  );\n\n  FileManagement.writeFile(envFileName, envFileContent);\n};\n"],"mappings":"AAAA,SAGEA,gBAAgB,QACX,sBAAsB;AAE7B,SACEC,4BAA4B,EAC5BC,qCAAqC,EACrCC,sBAAsB,EACtBC,2BAA2B,QACtB,0BAA0B;AACjC,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE,SAASC,gCAAgC,QAAQ,uCAAuC;AAExF,SAASC,cAAc,QAAQ,mCAAmC;AAClE,SAASC,iBAAiB,QAAQ,SAAS;AAE3C,MAAMC,cAAc,GAAG,GAAGR,4BAA4B,aAAa;AACnE,MAAMS,YAAY,GAAG,WAAW;AAEhC,MAAMC,sBAAsB,GAAG,OAAO;AAEtC,MAAMC,+BAA+B,GAAG,MAAAA,CACtCC,OAAmC,EACnCC,YAA0B,KACvB;EACH,IAAI;IAAA,IAAAC,qBAAA;IACF,IAAIF,OAAO,CAACG,gBAAgB,EAAE;MAC5B,MAAMC,uBAAuB,CAACJ,OAAO,EAAEC,YAAY,CAAC;IACtD;IAEA,IAAI,EAAAC,qBAAA,GAAAF,OAAO,CAACG,gBAAgB,cAAAD,qBAAA,uBAAxBA,qBAAA,CAA0BG,WAAW,MAAK,IAAI,EAAE;MAClD,MAAMC,oBAAoB,CAACN,OAAO,EAAEC,YAAY,CAAC;IACnD;IACA,OAAOA,YAAY;EACrB,CAAC,CAAC,OAAOM,KAAU,EAAE;IACnBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAME,gCAEZ,GAAGA,CAACC,WAAW,EAAEC,KAAK,KAAK;EAC1B,OAAOxB,gBAAgB,CAACuB,WAAW,EAAE,MAAOE,MAAM,IAAK;IACrD,MAAM;MAAEC,UAAU;MAAEC,GAAG;MAAEC,OAAO,EAAEC;IAAmB,CAAC,GAAGJ,MAAM;IAC/D,MAAM;MAAEK,WAAW;MAAEC,mBAAmB;MAAEC;IAAc,CAAC,GAAGR,KAAK;IAEjE,IAAIG,GAAG,KAAKM,SAAS,EACnB,MAAM,IAAIC,KAAK,CACb,gGACF,CAAC;;IAEH;IACA,MAAM;MAAEC,WAAW;MAAEC;IAAoB,CAAC,GAAGV,UAAU;IACvD,MAAM;MAAEW,gBAAgB;MAAEC;IAAY,CAAC,GAAGX,GAAG;IAE7C,IAAIE,kBAAkB,KAAKI,SAAS,EAAE;MACpC,MAAM,IAAIC,KAAK,CACb,4FACF,CAAC;IACH;IAEA,IAAIG,gBAAgB,KAAKJ,SAAS,EAAE;MAClC,MAAM,IAAIC,KAAK,CACb,yGACF,CAAC;IACH;IAEA,IAAIC,WAAW,KAAKF,SAAS,EAAE;MAC7B,MAAM,IAAIC,KAAK,CACb,yFACF,CAAC;IACH;IAEA,MAAMrB,OAAO,GAAG;MACd,GAAGW,KAAK;MACRM,WAAW;MACXO,gBAAgB;MAChBR,kBAAkB;MAClBU,aAAa,EAAED,WAAW,IAAInC,sBAAsB;MACpDqC,OAAO,EAAEJ,mBAAmB;MAC5BK,OAAO,EAAEN,WAAW;MACpBH,aAAa;MACbD;IACF,CAAsC;IAEtC,MAAMW,mBAAmB,GAAG,MAAM9B,+BAA+B,CAC/DC,OAAO,EACPY,MAAM,CAACkB,UACT,CAAC;IAED,IAAID,mBAAmB,EAAE;MACvBjB,MAAM,CAACkB,UAAU,GAAGD,mBAAmB;IACzC;IAEA,OAAOjB,MAAM;EACf,CAAC,CAAC;AACJ,CAAC;AAED,MAAMN,oBAAoB,GAAG,MAAAA,CAC3BN,OAAmC,EACnCC,YAAiB,KACd;EACH,MAAM;IACJgB,WAAW;IACXO,gBAAgB;IAChBR,kBAAkB;IAClBU,aAAa;IACbC,OAAO;IACPT,mBAAmB;IACnBC;EACF,CAAC,GAAGnB,OAAO;EAEX,MAAM+B,aAAa,GAAGpC,iBAAiB,CAACK,OAAO,CAAC;EAEhD,MAAMP,gCAAgC,CAACkC,OAAO,EAAER,aAAa,EAAEY,aAAa,CAAC;;EAE7E;EACA;EACA,IAAI9B,YAAY,CAAC+B,eAAe,CAAC5C,4BAA4B,CAAC,EAAE;IAC9DoB,OAAO,CAACyB,IAAI,CACV,GAAG7C,4BAA4B,yCACjC,CAAC;IACD;EACF;EAEA,MAAM8C,OAAO,GAAG,GAAGP,OAAO,IAAIvC,4BAA4B,EAAE;EAC5DM,cAAc,CAACyC,KAAK,CAACD,OAAO,EAAE;IAC5BE,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,MAAMC,qBAAqB,GAAG,CAAC,2BAA2B,CAAC;EAE3D,MAAMC,WAAW,GAAG,CAClB1C,cAAc,EACd,uBAAuB,EACvB,uBAAuB,EACvBC,YAAY,CACb;EAED,MAAM0C,aAAa,GAAIC,QAAgB,IAAK,GAAGN,OAAO,IAAIM,QAAQ,EAAE;EACpE;EACAH,qBAAqB,CAACI,OAAO,CAAED,QAAQ,IAAK;IAC1C,MAAME,UAAU,GAAGH,aAAa,CAACC,QAAQ,CAAC;IAC1C9C,cAAc,CAACiD,QAAQ,CACrB,GAAGpD,2BAA2B,IAC5BwC,aAAa,GAAG,KAAK,GAAG,KAAK,IAC3BS,QAAQ,EAAE,EACdE,UACF,CAAC;EACH,CAAC,CAAC;;EAEF;EACAJ,WAAW,CAACG,OAAO,CAAED,QAAQ,IAAK;IAChC,MAAME,UAAU,GAAGH,aAAa,CAACC,QAAQ,CAAC;IAC1C9C,cAAc,CAACiD,QAAQ,CACrB,GAAGpD,2BAA2B,WAAWiD,QAAQ,EAAE,EACnDE,UACF,CAAC;EACH,CAAC,CAAC;;EAEF;EACA,MAAME,mBAAmB,GAAGL,aAAa,CAAC3C,cAAc,CAAC;EACzDiD,kBAAkB,CAAC;IACjBnB,aAAa;IACbV,kBAAkB;IAClB4B;EACF,CAAC,CAAC;EACFE,YAAY,CAAC9C,OAAO,EAAEuC,aAAa,CAAC1C,YAAY,CAAC,CAAC;;EAElD;EACA,MAAMkD,QAAQ,GAAG9C,YAAY,CAAC+C,WAAW,CACvC,CAAC,GAAGX,qBAAqB,EAAE,GAAGC,WAAW,CAAC;EAAE;EAC5ClD,4BAA4B,EAC5BA,4BACF,CAAC;;EAED;EACA;EACA,MAAM6D,MAAM,GAAGhD,YAAY,CAACiD,IAAI,CAACC,OAAO,CAACC,OAAO,CAAC,UAAU,CAAC;EAC5DC,MAAM,CAACC,IAAI,CAACL,MAAM,CAAC,CAACR,OAAO,CAAEc,GAAG,IAAK;IACnC,IAAIN,MAAM,CAACM,GAAG,CAAC,CAACC,IAAI,KAAKpC,SAAS,IAAI6B,MAAM,CAACM,GAAG,CAAC,CAACE,IAAI,KAAKrC,SAAS,EAAE;MACpEnB,YAAY,CAACyD,aAAa,CAACX,QAAQ,CAACY,IAAI,EAAEJ,GAAG,CAAC;IAChD;EACF,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA,MAAMK,WAAW,GAAG3D,YAAY,CAACiD,IAAI,CAACC,OAAO,CAACC,OAAO;EACrDQ,WAAW,CAAC,qBAAqB,CAAC,GAAGA,WAAW,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;EAC7EA,WAAW,CAAC,uBAAuB,CAAC,GAClCA,WAAW,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;EAE1C,IAAI3D,YAAY,CAAC+B,eAAe,CAAC5C,4BAA4B,CAAC,EAAE;IAC9DoB,OAAO,CAACyB,IAAI,CACV,GAAG7C,4BAA4B,yCACjC,CAAC;IACD;EACF;;EAEA;EACA;EACA,MAAMyE,SAAS,GAAG5D,YAAY,CAAC6D,SAAS,CACtC1E,4BAA4B,EAC5B,eAAe,EACfA,4BAA4B,EAC5B,GAAGoC,gBAAgB,WACrB,CAAC;;EAED;EACAvB,YAAY,CAAC8D,aAAa,CACxB,CAAC,uBAAuB,EAAE,2BAA2B,EAAE,WAAW,CAAC,EACnE,sBAAsB,EACtB,SAAS,EACTF,SAAS,CAACF,IACZ,CAAC;EACD1D,YAAY,CAAC8D,aAAa,CACxB,EAAE,EACF,wBAAwB,EACxB,WAAW,EACXF,SAAS,CAACF,IACZ,CAAC;EAED1D,YAAY,CAAC8D,aAAa,CACxB,EAAE,EACF,yBAAyB,EACzB,YAAY,EACZF,SAAS,CAACF,IACZ,CAAC;;EAED;EACA,MAAMK,cAAc,GAAG/D,YAAY,CAACgE,8BAA8B,CAAC,CAAC;EACpE,KAAK,MAAMV,GAAG,IAAIS,cAAc,EAAE;IAChC,IACE,OAAOA,cAAc,CAACT,GAAG,CAAC,CAACW,aAAa,KAAK,WAAW,IACxDF,cAAc,CAACT,GAAG,CAAC,CAACW,aAAa,CAACC,YAAY,KAC5C,IAAI/E,4BAA4B,GAAG,EACrC;MACA,MAAMgF,gBAAgB,GAAGJ,cAAc,CAACT,GAAG,CAAC,CAACW,aAAa;MAC1DE,gBAAgB,CAACC,gBAAgB,GAAGpD,WAAW;MAC/CmD,gBAAgB,CAACE,0BAA0B,GACzCpD,mBAAmB,IAAI,MAAM;MAC/BkD,gBAAgB,CAACtE,sBAAsB,GAAGA,sBAAsB;MAChEsE,gBAAgB,CAACG,eAAe,GAAG,WAAW;MAC9CH,gBAAgB,CAACI,aAAa,GAAG,GAAG;IACtC;EACF;;EAEA;EACAvE,YAAY,CAACwE,kBAAkB,CAAC,iBAAiB,EAAExD,WAAW,EAAE4C,SAAS,CAAC;EAC1E5D,YAAY,CAACwE,kBAAkB,CAAC,iBAAiB,EAAExD,WAAW,CAAC;AACjE,CAAC;AAED,MAAM4B,kBAAkB,GAAI6B,OAI3B,IAAK;EACJ,MAAMC,uBAAuB,GAAG,8BAA8B;EAC9D,MAAMC,iBAAiB,GAAG,wBAAwB;EAElD,IAAIC,eAAe,GAAGnF,cAAc,CAACoF,QAAQ,CAACJ,OAAO,CAAC9B,mBAAmB,CAAC;EAE1E,IAAI8B,OAAO,CAAChD,aAAa,EAAE;IACzBmD,eAAe,GAAGrF,kBAAkB,CAClCqF,eAAe,EACfD,iBAAiB,EACjBF,OAAO,CAAChD,aACV,CAAC;EACH;EAEA,IAAIgD,OAAO,CAAC1D,kBAAkB,EAAE;IAC9B6D,eAAe,GAAGrF,kBAAkB,CAClCqF,eAAe,EACfF,uBAAuB,EACvBD,OAAO,CAAC1D,kBACV,CAAC;EACH;EAEAtB,cAAc,CAACqF,SAAS,CAACL,OAAO,CAAC9B,mBAAmB,EAAEiC,eAAe,CAAC;AACxE,CAAC;AAED,MAAM/B,YAAY,GAAGA,CACnB9C,OAAmC,EACnCgF,WAAmB,KAChB;EAAA,IAAAC,sBAAA;EACH,MAAMC,cAAc,GAAG,qBAAqB;EAC5C,MAAMC,SAAS,GAAG,gBAAgB;EAElC,IAAIC,cAAc,GAAG1F,cAAc,CAACoF,QAAQ,CAACE,WAAW,CAAC;EACzD,MAAM;IAAEK,SAAS;IAAEC;EAAO,CAAC,GAAG,EAAAL,sBAAA,GAAAjF,OAAO,CAACG,gBAAgB,cAAA8E,sBAAA,uBAAxBA,sBAAA,CAA0BM,GAAG,KAAI;IAC7DF,SAAS,EAAEjE,SAAS;IACpBkE,MAAM,EAAElE;EACV,CAAC;EAED,IAAI,CAACiE,SAAS,EAAE;IACd,MAAM,IAAIhE,KAAK,CACb,2HACF,CAAC;EACH;EACA+D,cAAc,GAAG5F,kBAAkB,CACjC4F,cAAc,EACdF,cAAc,EACdG,SACF,CAAC;EAED,IAAIC,MAAM,EAAE;IACV,MAAME,SAAS,GAAG;MAChBC,EAAE,EAAE,WAAW;MACfC,EAAE,EAAE;IACN,CAAC;IACD,MAAMC,YAAY,GAAIH,SAAS,CAASF,MAAM,CAACM,WAAW,CAAC,CAAC,CAAC,IAAI,EAAE;IACnE,IAAI,CAACD,YAAY,EAAE;MACjBnF,OAAO,CAACyB,IAAI,CACV,GAAGqD,MAAM,qIACX,CAAC;IACH,CAAC,MAAM;MACLF,cAAc,GAAG5F,kBAAkB,CACjC4F,cAAc,EACdD,SAAS,EACTQ,YACF,CAAC;IACH;EACF;EAEAjG,cAAc,CAACqF,SAAS,CAACC,WAAW,EAAEI,cAAc,CAAC;AACvD,CAAC;AAED,eAAehF,uBAAuBA,CACpCJ,OAAmC,EACnCC,YAAiB,EACjB;EACA;EACA,MAAM;IAAE0B,OAAO;IAAEC;EAAQ,CAAC,GAAG5B,OAAO;EACpC,MAAM+B,aAAa,GAAGpC,iBAAiB,CAACK,OAAO,CAAC;EAChD;EACA,MAAM6F,UAAU,GAAG,GAAG9D,aAAa,GAAG,KAAK,GAAG,KAAK,oBAAoB;EACvE,MAAM+D,cAAc,GAAG,mBAAmB;EAC1C,MAAMC,OAAO,GAAG,GAAGpE,OAAO,IAAIC,OAAO,EAAE;EACvC,MAAMW,aAAa,GAAIC,QAAgB,IAAK,GAAGuD,OAAO,IAAIvD,QAAQ,EAAE;EACpE,MAAME,UAAU,GAAGH,aAAa,CAACuD,cAAc,CAAC;;EAEhD;EACA;EACA,IAAI,CAACpG,cAAc,CAACsG,MAAM,CAACzD,aAAa,CAACuD,cAAc,CAAC,CAAC,EAAE;IACzDpG,cAAc,CAACyC,KAAK,CAAC4D,OAAO,EAAE;MAC5B3D,SAAS,EAAE;IACb,CAAC,CAAC;IAEF1C,cAAc,CAACiD,QAAQ,CACrB,GAAGpD,2BAA2B,IAAIsG,UAAU,EAAE,EAC9CnD,UACF,CAAC;EACH,CAAC,MAAM;IACLlC,OAAO,CAACyF,GAAG,CAAC,GAAG1D,aAAa,CAACuD,cAAc,CAAC,8BAA8B,CAAC;IAC3E;EACF;EAEAI,cAAc,CAAClG,OAAO,EAAE0C,UAAU,CAAC;EAEnC,MAAMyD,KAAK,GAAGlG,YAAY,CAACmG,cAAc,CAAC,yBAAyB,CAAC;EACpE,MAAMC,UAAU,GAAGpG,YAAY,CAACqG,eAAe,CAAC;IAAE9C,IAAI,EAAE,GAAG5B,OAAO;EAAG,CAAC,CAAC;EACvE3B,YAAY,CAACyD,aAAa,CAACyC,KAAK,EAAEE,UAAU,CAAC;EAE7CpG,YAAY,CAACsG,aAAa,CAAC,GAAG3E,OAAO,IAAIkE,cAAc,EAAE,EAAE,IAAI,EAAEK,KAAK,CAAC;AACzE;AAEA,MAAMD,cAAc,GAAGA,CACrBlG,OAAmC,EACnCgF,WAAmB,KAChB;EAAA,IAAAwB,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EACH,MAAMC,WAAW,GAAG,0BAA0B;EAE9C,IAAIzB,cAAc,GAAG1F,cAAc,CAACoF,QAAQ,CAACE,WAAW,CAAC;EACzD,MAAM8B,+BAA+B,IAAAN,sBAAA,GACnCxG,OAAO,CAACG,gBAAgB,cAAAqG,sBAAA,uBAAxBA,sBAAA,CAA0BM,+BAA+B;EAC3D,MAAM;IAAEzB,SAAS;IAAEC;EAAO,CAAC,GAAG,EAAAmB,sBAAA,GAAAzG,OAAO,CAACG,gBAAgB,cAAAsG,sBAAA,uBAAxBA,sBAAA,CAA0BlB,GAAG,KAAI;IAC7DF,SAAS,EAAEjE,SAAS;IACpBkE,MAAM,EAAElE;EACV,CAAC;EACD,IAAI,CAACiE,SAAS,EAAE;IACd,MAAM,IAAIhE,KAAK,CACb,2HACF,CAAC;EACH;EAEA,IAAI0F,OAAO,GAAG,EAAE;EAChB;EACA;EACA,IAAID,+BAA+B,KAAK,IAAI,EAAE;IAC5CC,OAAO,GAAG1H,qCAAqC;EACjD;EACA+F,cAAc,GAAG5F,kBAAkB,CAAC4F,cAAc,EAAEyB,WAAW,EAAEE,OAAO,CAAC;EAEzE3B,cAAc,GAAG5F,kBAAkB,CACjC4F,cAAc,EACd,qBAAqB,EACrBC,SACF,CAAC;EAED,IAAIC,MAAM,EAAE;IACVF,cAAc,GAAG5F,kBAAkB,CACjC4F,cAAc,EACd,gBAAgB,EAChBE,MAAM,CAAC0B,WAAW,CAAC,CACrB,CAAC;EACH;EAEA,MAAMC,mBAAmB,GACvB,EAAAP,sBAAA,GAAA1G,OAAO,CAACG,gBAAgB,cAAAuG,sBAAA,uBAAxBA,sBAAA,CAA0BO,mBAAmB,MAAK,KAAK;EACzD7B,cAAc,GAAG5F,kBAAkB,CACjC4F,cAAc,EACd,gCAAgC,EAChC6B,mBAAmB,CAACC,QAAQ,CAAC,CAC/B,CAAC;EAED,MAAMC,oBAAoB,GACxB,EAAAR,sBAAA,GAAA3G,OAAO,CAACG,gBAAgB,cAAAwG,sBAAA,uBAAxBA,sBAAA,CAA0BQ,oBAAoB,MAAK,KAAK;EAC1D/B,cAAc,GAAG5F,kBAAkB,CACjC4F,cAAc,EACd,iCAAiC,EACjC+B,oBAAoB,CAACD,QAAQ,CAAC,CAChC,CAAC;EAED,MAAME,uBAAuB,GAC3B,EAAAR,sBAAA,GAAA5G,OAAO,CAACG,gBAAgB,cAAAyG,sBAAA,uBAAxBA,sBAAA,CAA0BQ,uBAAuB,MAAK,KAAK;EAC7DhC,cAAc,GAAG5F,kBAAkB,CACjC4F,cAAc,EACd,qCAAqC,EACrCgC,uBAAuB,CAACF,QAAQ,CAAC,CACnC,CAAC;EAEDxH,cAAc,CAACqF,SAAS,CAACC,WAAW,EAAEI,cAAc,CAAC;AACvD,CAAC","ignoreList":[]}